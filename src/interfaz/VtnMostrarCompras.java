
package interfaz;

import archivos.ManipulacionArchivos;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Insets;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.stream.Collectors;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import modelo.Boleto;

/**
 *
 * @author chemo
 */
public class VtnMostrarCompras extends javax.swing.JInternalFrame
{

    /**
     * Creates new form VtnMostrarCompras
     */
    public VtnMostrarCompras()
    {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
    }
    private javax.swing.JScrollPane scrollDetalles;


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        panelAsientosHistorial = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelDetalles = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelAsientosHistorial.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelAsientosHistorialLayout = new javax.swing.GroupLayout(panelAsientosHistorial);
        panelAsientosHistorial.setLayout(panelAsientosHistorialLayout);
        panelAsientosHistorialLayout.setHorizontalGroup(
            panelAsientosHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1040, Short.MAX_VALUE)
        );
        panelAsientosHistorialLayout.setVerticalGroup(
            panelAsientosHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );

        getContentPane().add(panelAsientosHistorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 560));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        panelDetalles.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelDetallesLayout = new javax.swing.GroupLayout(panelDetalles);
        panelDetalles.setLayout(panelDetallesLayout);
        panelDetallesLayout.setHorizontalGroup(
            panelDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );
        panelDetallesLayout.setVerticalGroup(
            panelDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panelDetalles);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 0, 260, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt)//GEN-FIRST:event_formInternalFrameOpened
    {//GEN-HEADEREND:event_formInternalFrameOpened
        Map<String, List<Boleto>> historial = (Map<String, List<Boleto>>) ManipulacionArchivos.carga(null, "comprasUsuarios.dat");

        List<Boleto> boletosUsuario = new ArrayList<>();

        if (historial != null && VtnPrincipal.correoSesion != null)
        {
            List<Boleto> guardados = historial.get(VtnPrincipal.correoSesion);
            if (guardados != null)
            {
                boletosUsuario.addAll(guardados);
            }
        }

        // Llamar a los métodos aquí
        generarAsientosHistorial(boletosUsuario);
        generarPanelesInformacion(boletosUsuario);
    }//GEN-LAST:event_formInternalFrameOpened

    private void generarAsientosHistorial(List<Boleto> boletosUsuario)
    {
        panelAsientosHistorial.setLayout(null);

        int filas = 10;
        int columnas = 45;
        int ancho = 20;
        int alto = 20;
        int espacio = 2;

        int desplazamientoX = 40;
        int desplazamientoY = 10;
        double centroX = columnas / 2.0;
        double escalaBase = 0.25;

        Set<String> idsComprados = boletosUsuario.stream()
                .map(Boleto::getNumeroAsiento)
                .collect(Collectors.toSet());
        System.out.println("Boletos del usuario:");
        idsComprados.forEach(System.out::println);

        for (int fila = 0; fila < filas; fila++)
        {
            for (int col = 0; col < columnas; col++)
            {
                String id = "F" + fila + "_C" + col;

                String categoria = (fila < 3) ? "General"
                        : (fila < 6) ? "Preferencial" : "VIP";

                Color color = switch (categoria)
                {
                    case "VIP" ->
                        Color.LIGHT_GRAY;
                    case "Preferencial" ->
                        Color.CYAN;
                    default ->
                        Color.YELLOW;
                };

                double xRel = col - centroX;
                double curva = Math.pow(xRel, 2) * escalaBase * (1 + fila * 0.1);

                int x = desplazamientoX + col * (ancho + espacio);
                int y = desplazamientoY + fila * (alto + espacio) + (int) curva;

                JButton btn = new JButton();
                btn.setBounds(x, y, ancho, alto);
                btn.setText("-");
                btn.setMargin(new Insets(0, 0, 0, 0));
                btn.setEnabled(true);
                btn.setFont(new Font("Arial", Font.PLAIN, 8));
                
                btn.setOpaque(true);
                btn.setBorderPainted(false);
                btn.setContentAreaFilled(true);
                btn.setFocusPainted(false);

                btn.setToolTipText("Asiento " + id + " - " + categoria);

                if (idsComprados.contains(id))
                {
                    btn.setBackground(Color.RED);
                } else
                {
                    btn.setBackground(color); // amarillo / cyan / gris
                }

                panelAsientosHistorial.add(btn);
            }
        }

        panelAsientosHistorial.revalidate();
        panelAsientosHistorial.repaint();
    }

    private void generarPanelesInformacion(List<Boleto> boletosUsuario)
    {
        panelDetalles.setLayout(new BoxLayout(panelDetalles, BoxLayout.Y_AXIS));

        for (Boleto b : boletosUsuario)
        {
            JPanel card = new JPanel(new BorderLayout());
            card.setBorder(BorderFactory.createLineBorder(Color.GRAY));
            card.setBackground(new Color(240, 240, 240));
            card.setMaximumSize(new Dimension(260, 100));

            JLabel info = new JLabel("<html>Asiento: <b>" + b.getNumeroAsiento() + "</b><br>"
                    + "Categoría: " + b.getCategoria() + "<br>"
                    + "Precio: $" + b.getPrecio() + "</html>");
            info.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

            JButton btnCancelar = new JButton("Cancelar");
            btnCancelar.setBackground(Color.RED);
            btnCancelar.setForeground(Color.WHITE);
            btnCancelar.addActionListener(e -> cancelarBoleto(b));

            card.add(info, BorderLayout.CENTER);
            card.add(btnCancelar, BorderLayout.EAST);

            panelDetalles.add(card);
        }

        panelDetalles.revalidate();
        panelDetalles.repaint();
    }

    private void cancelarBoleto(Boleto b)
    {
        Map<String, List<Boleto>> historial = (Map<String, List<Boleto>>) ManipulacionArchivos.carga(null, "comprasUsuarios.dat");

        List<Boleto> vendidos = (List<Boleto>) ManipulacionArchivos.carga(null, "boletosVendidos.dat");

        if (historial != null && VtnPrincipal.correoSesion != null)
        {
            List<Boleto> lista = historial.get(VtnPrincipal.correoSesion);
            if (lista != null)
            {
                lista.removeIf(bol -> bol.getId().equals(b.getId()));
                historial.put(VtnPrincipal.correoSesion, lista);
                ManipulacionArchivos.guarda(null, historial, "comprasUsuarios.dat");

                if (vendidos != null)
                {
                    vendidos.removeIf(bol -> bol.getId().equals(b.getId()));
                    ManipulacionArchivos.guarda(null, vendidos, "boletosVendidos.dat");
                }

                JOptionPane.showMessageDialog(this, "Boleto cancelado y liberado.");

                panelAsientosHistorial.removeAll();
                panelDetalles.removeAll();
                generarAsientosHistorial(lista);
                generarPanelesInformacion(lista);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelAsientosHistorial;
    private javax.swing.JPanel panelDetalles;
    // End of variables declaration//GEN-END:variables
}
