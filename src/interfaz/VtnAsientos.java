/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package interfaz;

import estructuras.ListarBoletos;
import archivos.ManipulacionArchivos;
import cjb.ci.CtrlInterfaz;
import correo.EmailSender;
import estructuras.ColaBoletos;
import estructuras.ListaDobleOrdenada;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import modelo.*;

/**
 *
 * @author chemo
 */
public class VtnAsientos extends javax.swing.JInternalFrame
{

    private ListarBoletos nboleto;

    private java.util.List<JButton> asientosSeleccionados = new java.util.ArrayList<>();
    private JButton[][] asientos = new JButton[10][45];
    private boolean[][] ocupados = new boolean[10][45];
    private ListaDobleOrdenada listaOrdenada = new ListaDobleOrdenada();

    private final int filas = 10;
    private final int columnas = 45;
    private final Map<JButton, Boleto> mapaBoletos = new HashMap<>();
    public static Map<String, Double> precios = new HashMap<>();

    private ColaBoletos colaBoletos = new ColaBoletos();
    public static VtnAsientos instanciaActiva;

    /**
     * Creates new form VtnAsientos
     *
     * @param nboleto
     */
    public VtnAsientos(ListarBoletos nboleto)
    {
        this.nboleto = nboleto;
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        cargarPrecios();
        Object datos = ManipulacionArchivos.carga(null, "precios.dat");
        if (datos instanceof Map<?, ?> datosMap)
        {
            precios.putAll((Map<String, Double>) datosMap);
        } else
        {
            cargarPrecios();
        }
        generarAsientosConPosicion();
        correoJT.setText(VtnPrincipal.correoSesion);
        instanciaActiva = this;
    }

    private void cargarPrecios()
    {
        precios.put("VIP", 300.0);
        precios.put("Preferencial", 200.0);
        precios.put("General", 100.0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        panelAsientos = new javax.swing.JPanel();
        aceptar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        asientosJT = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        totalJT = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        correoJT = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelAsientos.setBackground(new java.awt.Color(255, 255, 255));
        panelAsientos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        aceptar.setBackground(new java.awt.Color(102, 255, 102));
        aceptar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        aceptar.setForeground(new java.awt.Color(255, 255, 255));
        aceptar.setText("ACEPTAR");
        aceptar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                aceptarActionPerformed(evt);
            }
        });
        panelAsientos.add(aceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 500, -1, -1));

        cancelar.setBackground(new java.awt.Color(255, 51, 51));
        cancelar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelar.setForeground(new java.awt.Color(255, 255, 255));
        cancelar.setText("CANCELAR");
        cancelar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelarActionPerformed(evt);
            }
        });
        panelAsientos.add(cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 500, -1, -1));

        asientosJT.setEditable(false);
        panelAsientos.add(asientosJT, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 360, 250, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Asientos:");
        panelAsientos.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 340, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Total:");
        panelAsientos.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 390, -1, -1));

        totalJT.setEditable(false);
        totalJT.setText("$0.00");
        panelAsientos.add(totalJT, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 410, 250, -1));

        jLabel3.setText("Correo:");
        panelAsientos.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 440, -1, -1));
        panelAsientos.add(correoJT, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 460, 250, -1));

        getContentPane().add(panelAsientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_aceptarActionPerformed
    {//GEN-HEADEREND:event_aceptarActionPerformed
        if (asientosSeleccionados.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "No hay asientos seleccionados.");
            return;
        }

        double total = 0;
        StringBuilder detalle = new StringBuilder();
        List<Boleto> boletosVendidos = new ArrayList<>();

        for (JButton btn : asientosSeleccionados)
        {
            Boleto boleto = mapaBoletos.get(btn);

            nboleto.cambiarEstadoBoleto(boleto);
            colaBoletos.encolar(boleto);
            listaOrdenada.insertarOrdenado(boleto);
            boletosVendidos.add(boleto);

            total += boleto.getPrecio();

            detalle.append(boleto.getNumeroAsiento())
                    .append(" (").append(boleto.getCategoria()).append(") - $")
                    .append(boleto.getPrecio()).append("\n");

            btn.setBackground(Color.RED);
        }

        JOptionPane.showMessageDialog(this,
                "Compra realizada\n\n" + detalle + "\nTotal: $" + total,
                "Compra exitosa",
                JOptionPane.INFORMATION_MESSAGE);
        System.out.println(new File("imagenes/UAEMEX.png").getAbsolutePath());

        String correoDestino = correoJT.getText().trim();

        if (!correoDestino.isEmpty() && correoDestino.matches("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"))
        {
            StringBuilder mensajeHTML = new StringBuilder("""
                <html>
                  <body style='font-family: Arial, sans-serif;'>
                    <div style='text-align: center; margin-bottom: 10px;'>
                      <img src='cid:logoUAEMex' alt='UAEMex'
                           style='max-width: 120px; height: auto; display: block; margin: 0 auto;'>
                    </div>
                    <h2 style='color: green; text-align: center;'>¡Gracias por tu compra en el Estadio Universitario Alberto "Chivo" Córdoba!</h2>
                    <p style='color: #880e4f;'>Este es el resumen de tus boletos:</p>
                    <table style='border-collapse: collapse; width: 100%;'>
                      <tr style='background-color: #f2f2f2;'>
                        <th style='border: 1px solid #ddd; padding: 8px;'>Asiento</th>
                        <th style='border: 1px solid #ddd; padding: 8px;'>Categoría</th>
                        <th style='border: 1px solid #ddd; padding: 8px;'>Precio</th>
                      </tr>
                """);

            for (JButton btn : asientosSeleccionados)
            {
                Boleto b = mapaBoletos.get(btn);
                mensajeHTML.append(String.format("""
                      <tr>
                        <td style='border: 1px solid #ddd; padding: 8px;'>%s</td>
                        <td style='border: 1px solid #ddd; padding: 8px;'>%s</td>
                        <td style='border: 1px solid #ddd; padding: 8px;'>$%.2f</td>
                      </tr>
                    """, b.getNumeroAsiento(), b.getCategoria(), b.getPrecio()));
            }

            mensajeHTML.append(String.format("""
                    </table>
                    <p style='font-weight: bold;'>Total: $%.2f</p>
                    <p>Disfruta del evento.<br>Gracias por tu preferencia.</p>
                    <hr>
                    <small style='color: #777;'>Este correo fue generado automáticamente. No respondas a este mensaje.</small>
                  </body>
                </html>
                """, total));

            EmailSender.enviarCorreo(correoDestino, "🎟 Confirmación de compra de boletos", mensajeHTML.toString());

            EmailSender.enviarCorreo(correoDestino, "Confirmación de compra de boletos", correoDestino.toString());
        } else
        {
            JOptionPane.showMessageDialog(this, "Correo no válido o vacío. No se envió confirmación por email.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }

        generarArchivoBoletosVendidos();
        listaOrdenada.generarReporteTXT();
        VtnAdministrador.actualizarGraficas();

        CtrlInterfaz.limpia(asientosJT, totalJT, correoJT);
        asientosSeleccionados.clear();

        List<Boleto> vendidosPrevios = (List<Boleto>) ManipulacionArchivos.carga(null, "boletosVendidos.dat");
        if (vendidosPrevios == null)
        {
            vendidosPrevios = new ArrayList<>();
        }
        vendidosPrevios.addAll(boletosVendidos);
        ManipulacionArchivos.guarda(null, vendidosPrevios, "boletosVendidos.dat");

        Map<String, List<Boleto>> historial = (Map<String, List<Boleto>>) ManipulacionArchivos.carga(null, "comprasUsuarios.dat");

        if (historial == null)
        {
            historial = new HashMap<>();
        }

        String correoUsuario = VtnPrincipal.correoSesion;

        if (correoUsuario != null)
        {
            List<Boleto> compras = historial.getOrDefault(correoUsuario, new ArrayList<>());
            compras.addAll(boletosVendidos);
            historial.put(correoUsuario, compras);
            ManipulacionArchivos.guarda(null, historial, "comprasUsuarios.dat");
        }
    }//GEN-LAST:event_aceptarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelarActionPerformed
    {//GEN-HEADEREND:event_cancelarActionPerformed
        deseleccionarTodo();
        CtrlInterfaz.limpia(asientosJT, totalJT);
    }//GEN-LAST:event_cancelarActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt)//GEN-FIRST:event_formInternalFrameOpened
    {//GEN-HEADEREND:event_formInternalFrameOpened

    }//GEN-LAST:event_formInternalFrameOpened

    private void generarArchivoBoletosVendidos()
    {
        Queue<Boleto> vendidos = colaBoletos.obtenerBoletosVendidos();

        try
        {
            String nombreArchivo = "boletos_vendidos_" + java.time.LocalDate.now() + ".txt";
            java.io.PrintWriter writer = new java.io.PrintWriter(nombreArchivo, "UTF-8");

            writer.println("Boletos Vendidos - Fecha: " + java.time.LocalDateTime.now());
            writer.println("--------------------------------------------------------");

            for (Boleto b : vendidos)
            {
                writer.println("ID: " + b.getId() + ", Categoría: " + b.getCategoria()
                        + ", Precio: $" + b.getPrecio() + ", Asiento: " + b.getNumeroAsiento());
            }

            writer.close();
            System.out.println("Archivo generado: " + nombreArchivo);
        } catch (Exception e)
        {
            System.err.println("Error al generar el archivo: " + e.getMessage());
        }
    }

    private void deseleccionarTodo()
    {
        for (JButton btn : asientosSeleccionados)
        {
            Boleto boleto = mapaBoletos.get(btn);
            String categoria = boleto.getCategoria();
            Color color = switch (categoria)
            {
                case "VIP" ->
                    Color.LIGHT_GRAY;
                case "Preferencial" ->
                    Color.CYAN;
                default ->
                    Color.YELLOW;
            };

            btn.setBackground(color);
        }
        asientosSeleccionados.clear();
    }

    private void generarAsientosConPosicion()
    {
        int ancho = 20;
        int alto = 20;
        int espacio = 2;

        int desplazamientoX = 140;
        int desplazamientoY = 10;

        double centroX = columnas / 2.0;
        double escalaBase = 0.25;

        for (int fila = 0; fila < filas; fila++)
        {
            for (int col = 0; col < columnas; col++)
            {
                JButton btn = new JButton();

                String categoria = (fila < 3) ? "General" : (fila < 6) ? "Preferencial" : "VIP";
                Color color = switch (categoria)
                {
                    case "VIP" ->
                        Color.LIGHT_GRAY;
                    case "Preferencial" ->
                        Color.CYAN;
                    default ->
                        Color.YELLOW;
                };

                btn.setBackground(color);
                btn.setOpaque(true);
                btn.setBorderPainted(false);

                String id = "F" + fila + "_C" + col;
                btn.setText(id);
                btn.setFont(new Font("Arial", Font.PLAIN, 8));

                double xRel = col - centroX;
                double curva = Math.pow(xRel, 2) * escalaBase * (1 + fila * 0.1);

                int x = desplazamientoX + col * (ancho + espacio);
                int y = desplazamientoY + fila * (alto + espacio) + (int) curva;

                double precio = precios.get(categoria);
                Boleto boleto = new Boleto(id, categoria, precio, id);
                nboleto.agregarBoleto(boleto);
                mapaBoletos.put(btn, boleto);

                btn.setToolTipText("Asiento " + id + " | " + categoria + " $" + precio);

                btn.addActionListener(evt ->
                {
                    if (btn.getBackground().equals(Color.RED))
                    {
                        return;
                    }

                    if (btn.getBackground().equals(Color.GREEN))
                    {
                        btn.setBackground(color);
                        asientosSeleccionados.remove(btn);
                    } else
                    {
                        btn.setBackground(Color.GREEN);
                        asientosSeleccionados.add(btn);
                    }
                    actualizarCamposDeResumen();
                });

                panelAsientos.add(btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, ancho, alto));
            }
        }

        List<Boleto> boletosVendidos = (List<Boleto>) ManipulacionArchivos.carga(null, "boletosVendidos.dat");

        if (boletosVendidos != null)
        {
            for (Boleto vendido : boletosVendidos)
            {
                for (Map.Entry<JButton, Boleto> entry : mapaBoletos.entrySet())
                {
                    if (vendido.getId().equals(entry.getValue().getId()))
                    {
                        entry.getKey().setBackground(Color.RED);
                        //entry.getKey().setEnabled(false);
                        entry.getValue().marcarComoVendido();
                        break;
                    }
                }
            }
        }

        panelAsientos.revalidate();
        panelAsientos.repaint();
    }

    private void actualizarCamposDeResumen()
    {
        StringBuilder listaAsientos = new StringBuilder();
        double total = 0;

        for (JButton btn : asientosSeleccionados)
        {
            Boleto boleto = mapaBoletos.get(btn);
            listaAsientos.append(boleto.getNumeroAsiento()).append(", ");
            total += boleto.getPrecio();
        }

        if (listaAsientos.length() > 0)
        {
            listaAsientos.setLength(listaAsientos.length() - 2);
        }

        asientosJT.setText(listaAsientos.toString());
        totalJT.setText("$" + total);
    }

    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar;
    private javax.swing.JTextField asientosJT;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField correoJT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel panelAsientos;
    private javax.swing.JTextField totalJT;
    // End of variables declaration//GEN-END:variables
}
