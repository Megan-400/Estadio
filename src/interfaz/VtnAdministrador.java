/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package interfaz;

import archivos.ManipulacionArchivos;
import cjb.ci.CtrlInterfaz;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import modelo.Boleto;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author chemo
 */
public class VtnAdministrador extends javax.swing.JInternalFrame
{

    private static VtnAdministrador instancia;

    /**
     * Creates new form VtnAdministrador
     */
    public VtnAdministrador()
    {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        instancia = this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        precioGeneral = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        precioPreferencial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        precioVIP = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelVistaPrevia = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        panelEstadisticas = new javax.swing.JPanel();
        panelIngresos = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Precios Boletos:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel2.setText("General:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));
        jPanel1.add(precioGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 100, -1));

        jLabel3.setText("Preferencial:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));
        jPanel1.add(precioPreferencial, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 100, -1));

        jLabel4.setText("VIP:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));
        jPanel1.add(precioVIP, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 100, -1));

        jButton1.setText("ACEPTAR");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        jButton2.setText("LIMPIAR");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, -1, -1));

        jButton3.setText("IMAGEN");
        jButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, -1, -1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelVistaPrevia, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelVistaPrevia, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 350, 250));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Reiniciar evento:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, -1, -1));

        jButton4.setText("ACEPTAR");
        jButton4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 100, -1));

        javax.swing.GroupLayout panelEstadisticasLayout = new javax.swing.GroupLayout(panelEstadisticas);
        panelEstadisticas.setLayout(panelEstadisticasLayout);
        panelEstadisticasLayout.setHorizontalGroup(
            panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );
        panelEstadisticasLayout.setVerticalGroup(
            panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 280, Short.MAX_VALUE)
        );

        jPanel1.add(panelEstadisticas, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, 540, 280));

        javax.swing.GroupLayout panelIngresosLayout = new javax.swing.GroupLayout(panelIngresos);
        panelIngresos.setLayout(panelIngresosLayout);
        panelIngresosLayout.setHorizontalGroup(
            panelIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );
        panelIngresosLayout.setVerticalGroup(
            panelIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 280, Short.MAX_VALUE)
        );

        jPanel1.add(panelIngresos, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 280, 540, 280));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        guardarPrecios();
        ManipulacionArchivos.guarda(null, VtnAsientos.precios, "precios.dat");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt)//GEN-FIRST:event_formInternalFrameOpened
    {//GEN-HEADEREND:event_formInternalFrameOpened
//        precioGeneral.setText(String.valueOf(VtnAsientos.precios.get("General")));
//        precioPreferencial.setText(String.valueOf(VtnAsientos.precios.get("Preferencial")));
//        precioVIP.setText(String.valueOf(VtnAsientos.precios.get("VIP")));
        cargarPreciosDesdeArchivo();

        File archivo = new File("Datos/flyer.png");
        if (archivo.exists())
        {
            ImageIcon icono = new ImageIcon(archivo.getAbsolutePath());
            Image imgEscalada = icono.getImage().getScaledInstance(
                    labelVistaPrevia.getWidth(),
                    labelVistaPrevia.getHeight(),
                    Image.SCALE_SMOOTH
            );
            labelVistaPrevia.setIcon(new ImageIcon(imgEscalada));
        }
        mostrarEstadisticasBoletos(panelEstadisticas);
        mostrarGraficaIngresos();
    }//GEN-LAST:event_formInternalFrameOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        CtrlInterfaz.limpia(precioGeneral, precioPreferencial, precioVIP);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
    {//GEN-HEADEREND:event_jButton3ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("Imágenes", "jpg", "jpeg", "png"));

        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            try
            {
                File imagenSeleccionada = fileChooser.getSelectedFile();
                Path origen = Paths.get(imagenSeleccionada.getAbsolutePath());

                Path destino = Paths.get("Datos", "flyer.png");
                Files.createDirectories(destino.getParent());

                Files.copy(origen, destino, StandardCopyOption.REPLACE_EXISTING);
                ImageIcon icono = new ImageIcon(destino.toFile().getAbsolutePath());
                Image imgEscalada = icono.getImage().getScaledInstance(labelVistaPrevia.getWidth(), labelVistaPrevia.getHeight(), Image.SCALE_SMOOTH);
                labelVistaPrevia.setIcon(new ImageIcon(imgEscalada));

                JOptionPane.showMessageDialog(this, "Imagen actualizada correctamente.");
            } catch (IOException ex)
            {
                JOptionPane.showMessageDialog(this, "Error al guardar la imagen: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton4ActionPerformed
    {//GEN-HEADEREND:event_jButton4ActionPerformed
        String mensaje = """
    ¿Está seguro que desea reiniciar el evento?

    Se eliminarán los siguientes datos:
    - Archivos de boletos vendidos (*.txt)
    - Archivos de boletos ordenados (*.txt)
    - Archivo de boletos vendidos (.dat)
    - Se restablecerán los precios predeterminados
    """;

        int opcion = JOptionPane.showConfirmDialog(this, mensaje, "Confirmar reinicio", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (opcion == JOptionPane.YES_OPTION)
        {
            File root = new File(".");
            for (File file : root.listFiles())
            {
                if (file.getName().startsWith("boletos_ordenados_") || file.getName().startsWith("boletos_vendidos_"))
                {
                    file.delete();
                }
            }

            File dat = new File("Datos/boletosVendidos.dat");
            if (dat.exists())
            {
                dat.delete();
            }

            Map<String, Double> preciosDefault = new HashMap<>();
            preciosDefault.put("VIP", 300.0);
            preciosDefault.put("Preferencial", 200.0);
            preciosDefault.put("General", 100.0);
            ManipulacionArchivos.guarda(null, preciosDefault, "precios.dat");

            VtnAsientos.precios.clear();
            VtnAsientos.precios.putAll(preciosDefault);

            JOptionPane.showMessageDialog(this, "Se ha reiniciado correctamente el sistema para un nuevo evento.");
        } else
        {
            JOptionPane.showMessageDialog(this, "Operación cancelada.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    public static void actualizarGraficas()
    {
        if (instancia != null)
        {
            instancia.mostrarGraficaIngresos();
        }
    }

    private void mostrarEstadisticasBoletos(JPanel panelDestino)
    {
        int vip = 0, preferencial = 0, general = 0;

        List<Boleto> boletosVendidos = (List<Boleto>) ManipulacionArchivos.carga(null, "boletosVendidos.dat");
        if (boletosVendidos != null)
        {
            for (Boleto b : boletosVendidos)
            {
                switch (b.getCategoria())
                {
                    case "VIP" ->
                        vip++;
                    case "Preferencial" ->
                        preferencial++;
                    case "General" ->
                        general++;
                }
            }
        }

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.addValue(vip, "Boletos", "VIP");
        dataset.addValue(preferencial, "Boletos", "Preferencial");
        dataset.addValue(general, "Boletos", "General");

        JFreeChart chart = ChartFactory.createBarChart(
                "Boletos Vendidos por Categoría",
                "Categoría", "Cantidad",
                dataset, PlotOrientation.VERTICAL,
                false, true, false
        );
        
        CategoryPlot plot = chart.getCategoryPlot();
        NumberAxis yAxis = (NumberAxis) plot.getRangeAxis();
        yAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());

        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(panelDestino.getSize());

        panelDestino.removeAll();
        panelDestino.setLayout(new BorderLayout());
        panelDestino.add(chartPanel, BorderLayout.CENTER);
        panelDestino.validate();
    }

    private void mostrarGraficaIngresos()
    {
        List<Boleto> boletos = (List<Boleto>) ManipulacionArchivos.carga(null, "boletosVendidos.dat");

        if (boletos == null || boletos.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "No hay boletos vendidos para mostrar ingresos.");
            return;
        }

        Map<String, Double> ingresos = new HashMap<>();
        for (Boleto b : boletos)
        {
            ingresos.put(b.getCategoria(),
                    ingresos.getOrDefault(b.getCategoria(), 0.0) + b.getPrecio());
        }

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (Map.Entry<String, Double> entry : ingresos.entrySet())
        {
            dataset.addValue(entry.getValue(), "Ingresos", entry.getKey());
        }

        JFreeChart grafica = ChartFactory.createBarChart(
                "Ingresos por Categoría",
                "Categoría",
                "Monto ($)",
                dataset,
                PlotOrientation.VERTICAL,
                false, true, false
        );

        ChartPanel panel = new ChartPanel(grafica);
        panel.setMouseWheelEnabled(true);

        panelIngresos.removeAll();
        panelIngresos.setLayout(new BorderLayout());
        panelIngresos.add(panel, BorderLayout.CENTER);
        panelIngresos.validate();
    }

    private void cargarPreciosDesdeArchivo()
    {
        Object datos = ManipulacionArchivos.carga(null, "precios.dat");
        if (datos instanceof Map<?, ?> datosMap)
        {
            try
            {
                Map<String, Double> precios = (Map<String, Double>) datosMap;
                precioGeneral.setText(String.valueOf(precios.get("General")));
                precioPreferencial.setText(String.valueOf(precios.get("Preferencial")));
                precioVIP.setText(String.valueOf(precios.get("VIP")));
            } catch (Exception e)
            {
                JOptionPane.showMessageDialog(this, "Error al cargar precios: " + e.getMessage());
            }
        } else
        {
            precioGeneral.setText("0");
            precioPreferencial.setText("0");
            precioVIP.setText("0");
        }
    }

    private void guardarPrecios()
    {
        try
        {
            double general = Double.parseDouble(precioGeneral.getText());
            double preferencial = Double.parseDouble(precioPreferencial.getText());
            double vip = Double.parseDouble(precioVIP.getText());

            VtnAsientos.precios.put("General", general);
            VtnAsientos.precios.put("Preferencial", preferencial);
            VtnAsientos.precios.put("VIP", vip);

            JOptionPane.showMessageDialog(this, "Precios actualizados con éxito.");
        } catch (NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(this, "Verifica que los precios sean números válidos.");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelVistaPrevia;
    private javax.swing.JPanel panelEstadisticas;
    private javax.swing.JPanel panelIngresos;
    private javax.swing.JTextField precioGeneral;
    private javax.swing.JTextField precioPreferencial;
    private javax.swing.JTextField precioVIP;
    // End of variables declaration//GEN-END:variables
}
